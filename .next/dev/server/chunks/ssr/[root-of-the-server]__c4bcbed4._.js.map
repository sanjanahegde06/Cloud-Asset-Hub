{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///D:/cloud-asset-hub/lib/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,IAAA,iKAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///D:/cloud-asset-hub/pages/index.js"],"sourcesContent":["// pages/index.js\nimport { useState } from 'react';\nimport { supabase } from '../lib/supabaseClient';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nexport default function Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\n  const router = useRouter();\n\n  // Handler for standard user login\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n\n      if (error) throw error;\n      if (data.user) router.push('/dashboard');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handler for sending the password reset email\n  const handlePasswordReset = async (e) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n\n      // IMPORTANT: Update 'window.location.origin' if this is a static export\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`, \n      });\n\n      if (error) throw error;\n\n      setSuccess('Password reset link sent! Check your email (and spam folder).');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- RENDERING THE LOGIN VIEW ---\n  const renderLoginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div className=\"form-group\">\n        <label>Email</label>\n        <input\n          type=\"email\"\n          placeholder=\"you@example.com\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Password</label>\n        <div className=\"password-input\">\n          <input\n            type={showPassword ? \"text\" : \"password\"}\n            placeholder=\"••••••••\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <button\n            type=\"button\"\n            className=\"password-toggle\"\n            onClick={() => setShowPassword(!showPassword)}\n          >\n            {showPassword ? (\n              <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" />\n              </svg>\n            ) : (\n              <svg width=\"22\" height=\"22\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n              </svg>\n            )}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"forgot-password-link\">\n        <a href=\"#\" onClick={(e) => { e.preventDefault(); setIsForgotPassword(true); setError(null); setSuccess(null); }}>Forgot password?</a>\n      </div>\n\n      <button type=\"submit\" className=\"login-btn\" disabled={loading}>\n        {loading ? 'Signing in...' : 'Sign In'}\n      </button>\n    </form>\n  );\n\n  // --- RENDERING THE FORGOT PASSWORD VIEW ---\n  const renderForgotPasswordForm = () => (\n    <form onSubmit={handlePasswordReset}>\n      <p className=\"login-header p\" style={{ marginBottom: '1.5rem', marginTop: '-0.5rem' }}>Enter your account email to receive a password reset link.</p>\n      \n      <div className=\"form-group\">\n        <label>Email</label>\n        <input\n          type=\"email\"\n          placeholder=\"you@example.com\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n      </div>\n\n      <button type=\"submit\" className=\"login-btn\" disabled={loading}>\n        {loading ? 'Sending Link...' : 'Send Reset Link'}\n      </button>\n\n      <div className=\"signup-text\" style={{marginTop: '1rem'}}>\n        <a href=\"#\" onClick={(e) => { e.preventDefault(); setIsForgotPassword(false); setError(null); setSuccess(null); }}>Back to Sign In</a>\n      </div>\n    </form>\n  );\n\n\n  // --- MAIN RENDER FUNCTION ---\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-container\">\n        <div className=\"login-header\">\n          <div className=\"login-icon\">\n            <svg width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n            </svg>\n          </div>\n          <h1>{isForgotPassword ? 'Reset Password' : 'Welcome Back'}</h1>\n          {!isForgotPassword && <p>Sign in to your account</p>}\n        </div>\n\n        {error && <div className=\"error\">{error}</div>}\n        {success && <div className=\"success\">{success}</div>}\n        \n        {isForgotPassword ? renderForgotPasswordForm() : renderLoginForm()}\n\n        {!isForgotPassword && (\n          <p className=\"signup-text\">\n            Don't have an account? <Link href=\"/signup\">Sign up</Link>\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,iBAAiB;;;;;;AACjB;AACA;AACA;AACA;;;;;;AAEe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,+GAAQ,EAAC;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,+GAAQ,EAAC;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,+GAAQ,EAAC;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IACvC,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,+GAAQ,EAAC;IACjD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,+GAAQ,EAAC;IACzD,MAAM,SAAS,IAAA,oIAAS;IAExB,kCAAkC;IAClC,MAAM,cAAc,OAAO;QACzB,EAAE,cAAc;QAChB,IAAI;YACF,WAAW;YACX,SAAS;YACT,WAAW;YAEX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,0HAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;gBAC7D;gBACA;YACF;YAEA,IAAI,OAAO,MAAM;YACjB,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI,CAAC;QAC7B,EAAE,OAAO,OAAO;YACd,SAAS,MAAM,OAAO;QACxB,SAAU;YACR,WAAW;QACb;IACF;IAEA,+CAA+C;IAC/C,MAAM,sBAAsB,OAAO;QACjC,EAAE,cAAc;QAChB,IAAI;YACF,WAAW;YACX,SAAS;YACT,WAAW;YAEX,wEAAwE;YACxE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,0HAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO;gBACjE,YAAY,GAAG,OAAO,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC;YACxD;YAEA,IAAI,OAAO,MAAM;YAEjB,WAAW;QACb,EAAE,OAAO,OAAO;YACd,SAAS,MAAM,OAAO;QACxB,SAAU;YACR,WAAW;QACb;IACF;IAEA,mCAAmC;IACnC,MAAM,kBAAkB,kBACtB,qKAAC;YAAK,UAAU;;8BACd,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;sCAAM;;;;;;sCACP,qKAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,QAAQ;;;;;;;;;;;;8BAIZ,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;sCAAM;;;;;;sCACP,qKAAC;4BAAI,WAAU;;8CACb,qKAAC;oCACC,MAAM,eAAe,SAAS;oCAC9B,aAAY;oCACZ,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,QAAQ;;;;;;8CAEV,qKAAC;oCACC,MAAK;oCACL,WAAU;oCACV,SAAS,IAAM,gBAAgB,CAAC;8CAE/B,6BACC,qKAAC;wCAAI,OAAM;wCAAK,QAAO;wCAAK,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDACpE,cAAA,qKAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;6DAGvE,qKAAC;wCAAI,OAAM;wCAAK,QAAO;wCAAK,MAAK;wCAAO,QAAO;wCAAe,SAAQ;;0DACpE,qKAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;0DACrE,qKAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAO/E,qKAAC;oBAAI,WAAU;8BACb,cAAA,qKAAC;wBAAE,MAAK;wBAAI,SAAS,CAAC;4BAAQ,EAAE,cAAc;4BAAI,oBAAoB;4BAAO,SAAS;4BAAO,WAAW;wBAAO;kCAAG;;;;;;;;;;;8BAGpH,qKAAC;oBAAO,MAAK;oBAAS,WAAU;oBAAY,UAAU;8BACnD,UAAU,kBAAkB;;;;;;;;;;;;IAKnC,6CAA6C;IAC7C,MAAM,2BAA2B,kBAC/B,qKAAC;YAAK,UAAU;;8BACd,qKAAC;oBAAE,WAAU;oBAAiB,OAAO;wBAAE,cAAc;wBAAU,WAAW;oBAAU;8BAAG;;;;;;8BAEvF,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;sCAAM;;;;;;sCACP,qKAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,QAAQ;;;;;;;;;;;;8BAIZ,qKAAC;oBAAO,MAAK;oBAAS,WAAU;oBAAY,UAAU;8BACnD,UAAU,oBAAoB;;;;;;8BAGjC,qKAAC;oBAAI,WAAU;oBAAc,OAAO;wBAAC,WAAW;oBAAM;8BACpD,cAAA,qKAAC;wBAAE,MAAK;wBAAI,SAAS,CAAC;4BAAQ,EAAE,cAAc;4BAAI,oBAAoB;4BAAQ,SAAS;4BAAO,WAAW;wBAAO;kCAAG;;;;;;;;;;;;;;;;;IAMzH,+BAA+B;IAC/B,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAI,WAAU;sCACb,cAAA,qKAAC;gCAAI,OAAM;gCAAK,QAAO;gCAAK,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACpE,cAAA,qKAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;sCAGzE,qKAAC;sCAAI,mBAAmB,mBAAmB;;;;;;wBAC1C,CAAC,kCAAoB,qKAAC;sCAAE;;;;;;;;;;;;gBAG1B,uBAAS,qKAAC;oBAAI,WAAU;8BAAS;;;;;;gBACjC,yBAAW,qKAAC;oBAAI,WAAU;8BAAW;;;;;;gBAErC,mBAAmB,6BAA6B;gBAEhD,CAAC,kCACA,qKAAC;oBAAE,WAAU;;wBAAc;sCACF,qKAAC,gIAAI;4BAAC,MAAK;sCAAU;;;;;;;;;;;;;;;;;;;;;;;AAMxD","debugId":null}}]
}